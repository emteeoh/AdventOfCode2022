statemachine = {(0, 'UL'): 1, (0, 'UP'): 2, (0, 'UR'): 3,
                 (0, 'LEFT'): 4, (0, 'RIGHT'): 5, (0, 'DL'): 6,
                 (0, 'DOWN'): 7, (0, 'DR'): 8, (1, 'UL'): 1,
                 (1, 'UP'): 2, (1, 'UR'): 2, (1, 'LEFT'): 4,
                 (1, 'RIGHT'): 2, (1, 'DL'): 4, (1, 'DOWN'): 4,
                 (1, 'DR'): 0, (2, 'UL'): 2, (2, 'UP'): 2,
                 (2, 'UR'): 2, (2, 'LEFT'): 1, (2, 'RIGHT'): 3,
                 (2, 'DL'): 4, (2, 'DOWN'): 0, (2, 'DR'): 5,
                 (3, 'UL'): 2, (3, 'UP'): 2, (3, 'UR'): 3,
                 (3, 'LEFT'): 2, (3, 'RIGHT'): 5, (3, 'DL'): 0,
                 (3, 'DOWN'): 5, (3, 'DR'): 5, (4, 'UL'): 4,
                 (4, 'UP'): 1, (4, 'UR'): 2, (4, 'LEFT'): 4,
                 (4, 'RIGHT'): 0, (4, 'DL'): 4, (4, 'DOWN'): 6,
                 (4, 'DR'): 7, (5, 'UL'): 2, (5, 'UP'): 3,
                 (5, 'UR'): 5, (5, 'LEFT'): 0, (5, 'RIGHT'): 5,
                 (5, 'DL'): 7, (5, 'DOWN'): 8, (5, 'DR'): 5,
                 (6, 'UL'): 4, (6, 'UP'): 4, (6, 'UR'): 0,
                 (6, 'LEFT'): 4, (6, 'RIGHT'): 7, (6, 'DL'): 6,
                 (6, 'DOWN'): 7, (6, 'DR'): 7, (7, 'UL'): 4,
                 (7, 'UP'): 0, (7, 'UR'): 5, (7, 'LEFT'): 6,
                 (7, 'RIGHT'): 8, (7, 'DL'): 7, (7, 'DOWN'): 7,
                 (7, 'DR'): 7, (8, 'UL'): 0, (8, 'UP'): 5,
                 (8, 'UR'): 5, (8, 'LEFT'): 7, (8, 'RIGHT'): 5,
                 (8, 'DL'): 7, (8, 'DOWN'): 7, (8, 'DR'): 8}

stateDefs = [(0, 0), (-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]

tchange = {(0, 'UL'): (0, 0), (0, 'UP'): (0, 0), (0, 'UR'): (0, 0),
            (0, 'LEFT'): (0, 0), (0, 'RIGHT'): (0, 0), (0, 'DL'): (0, 0),
            (0, 'DOWN'): (0, 0), (0, 'DR'): (0, 0), (1, 'UL'): (-1, -1),
            (1, 'UP'): (-1, -1), (1, 'UR'): (-1, 0), (1, 'LEFT'): (-1, -1),
            (1, 'RIGHT'): (0, 0), (1, 'DL'): (0, -1), (1, 'DOWN'): (0, 0),
            (1, 'DR'): (0, 0), (2, 'UL'): (-1, -1), (2, 'UP'): (-1, 0),
            (2, 'UR'): (-1, 1), (2, 'LEFT'): (0, 0), (2, 'RIGHT'): (0, 0),
            (2, 'DL'): (0, 0), (2, 'DOWN'): (0, 0), (2, 'DR'): (0, 0),
            (3, 'UL'): (-1, 0), (3, 'UP'): (-1, 1), (3, 'UR'): (-1, 1),
            (3, 'LEFT'): (0, 0), (3, 'RIGHT'): (-1, 1), (3, 'DL'): (0, 0),
            (3, 'DOWN'): (0, 0), (3, 'DR'): (0, 1), (4, 'UL'): (-1, -1),
            (4, 'UP'): (0, 0), (4, 'UR'): (0, 0), (4, 'LEFT'): (0, -1),
            (4, 'RIGHT'): (0, 0), (4, 'DL'): (1, -1), (4, 'DOWN'): (0, 0),
            (4, 'DR'): (0, 0), (5, 'UL'): (0, 0), (5, 'UP'): (0, 0),
            (5, 'UR'): (-1, 1), (5, 'LEFT'): (0, 0), (5, 'RIGHT'): (0, 1),
            (5, 'DL'): (0, 0), (5, 'DOWN'): (0, 0), (5, 'DR'): (1, 1),
            (6, 'UL'): (0, -1), (6, 'UP'): (0, 0), (6, 'UR'): (0, 0),
            (6, 'LEFT'): (1, -1), (6, 'RIGHT'): (0, 0), (6, 'DL'): (1, -1),
            (6, 'DOWN'): (1, -1), (6, 'DR'): (1, 0), (7, 'UL'): (0, 0),
            (7, 'UP'): (0, 0), (7, 'UR'): (0, 0), (7, 'LEFT'): (0, 0),
            (7, 'RIGHT'): (0, 0), (7, 'DL'): (1, -1), (7, 'DOWN'): (1, 0),
            (7, 'DR'): (1, 1), (8, 'UL'): (0, 0), (8, 'UP'): (0, 0),
            (8, 'UR'): (0, 1), (8, 'LEFT'): (0, 0), (8, 'RIGHT'): (1, 1),
            (8, 'DL'): (1, 0), (8, 'DOWN'): (1, 1), (8, 'DR'): (1, 1)}


def drawState(state):
    grid = [['.', '.', '.', '.', '.'], ['.', '.', '.', '.', '.'], ['.', '.', 'T', '.', '.'], ['.', '.', '.', '.', '.'],
            ['.', '.', '.', '.', '.']]
    x, y = stateDefs[state]
    x += 2
    y += 2
    grid[x][y] = 'H'
    # gridout = [indent + ''.join(xx) for xx in grid]
    gridout = []
    for xx in grid:
        t = ''.join(xx)
        gridout.append(f'{t:^9}')
    # grids = str([xx for xx in grid])
    return gridout


def drawGrids(states):
    grids = [drawState(st) for st in states]
    tt = [str(stateDefs[st]) for st in states]
    titles = [f'{ttt:^9}' for ttt in tt]
    out = ' '.join(titles) + '\n'
    for row in range(5):
        for st in grids:
            out = out + ''.join(st[row]) + ' '
        out += '\n'
    return out
